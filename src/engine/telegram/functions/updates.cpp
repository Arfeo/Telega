// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#include "updates.h"
#include "core/inboundpkt.h"
#include "core/outboundpkt.h"
#include "../coretypes.h"

using namespace Tg;

Functions::Updates::Updates() {
}

Functions::Updates::~Updates() {
}

bool Functions::Updates::getState(OutboundPkt *out) {
    out->appendInt(fncUpdatesGetState);
    return true;
}

UpdatesState Functions::Updates::getStateResult(InboundPkt *in) {
    UpdatesState result;
    if(!result.fetch(in)) return result;
    return result;
}

bool Functions::Updates::getDifference(OutboundPkt *out, qint32 pts, qint32 ptsTotalLimit, qint32 date, qint32 qts) {
    out->appendInt(fncUpdatesGetDifference);
    
    qint32 flags = 0;
    if(ptsTotalLimit != 0) flags = (1<<0 | flags);
    
    out->appendInt(flags);
    out->appendInt(pts);
    if(flags & 1<<0) out->appendInt(ptsTotalLimit);
    out->appendInt(date);
    out->appendInt(qts);
    return true;
}

UpdatesDifference Functions::Updates::getDifferenceResult(InboundPkt *in) {
    UpdatesDifference result;
    if(!result.fetch(in)) return result;
    return result;
}

bool Functions::Updates::getChannelDifference(OutboundPkt *out, bool force, const InputChannel &channel, const ChannelMessagesFilter &filter, qint32 pts, qint32 limit) {
    out->appendInt(fncUpdatesGetChannelDifference);
    
    qint32 flags = 0;
    if(force != 0) flags = (1<<0 | flags);
    
    out->appendInt(flags);
    if(!channel.push(out)) return false;
    if(!filter.push(out)) return false;
    out->appendInt(pts);
    out->appendInt(limit);
    return true;
}

UpdatesChannelDifference Functions::Updates::getChannelDifferenceResult(InboundPkt *in) {
    UpdatesChannelDifference result;
    if(!result.fetch(in)) return result;
    return result;
}

