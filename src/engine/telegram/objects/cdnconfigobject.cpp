// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#include "cdnconfigobject.h"

CdnConfigObject::CdnConfigObject(const CdnConfig &core, QObject *parent) :
    TelegramTypeQObject(parent),
    m_core(core)
{
}

CdnConfigObject::CdnConfigObject(QObject *parent) :
    TelegramTypeQObject(parent),
    m_core()
{
}

CdnConfigObject::~CdnConfigObject() {
}

void CdnConfigObject::setPublicKeys(const QList<CdnPublicKey> &publicKeys) {
    if(m_core.publicKeys() == publicKeys) return;
    m_core.setPublicKeys(publicKeys);
    Q_EMIT publicKeysChanged();
    Q_EMIT coreChanged();
}

QList<CdnPublicKey> CdnConfigObject::publicKeys() const {
    return m_core.publicKeys();
}

CdnConfigObject &CdnConfigObject::operator =(const CdnConfig &b) {
    if(m_core == b) return *this;
    m_core = b;

    Q_EMIT publicKeysChanged();
    Q_EMIT coreChanged();
    return *this;
}

bool CdnConfigObject::operator ==(const CdnConfig &b) const {
    return m_core == b;
}

void CdnConfigObject::setClassType(quint32 classType) {
    CdnConfig::CdnConfigClassType result;
    switch(classType) {
    case TypeCdnConfig:
        result = CdnConfig::typeCdnConfig;
        break;
    default:
        result = CdnConfig::typeCdnConfig;
        break;
    }

    if(m_core.classType() == result) return;
    m_core.setClassType(result);
    Q_EMIT classTypeChanged();
    Q_EMIT coreChanged();
}

quint32 CdnConfigObject::classType() const {
    int result;
    switch(static_cast<qint64>(m_core.classType())) {
    case CdnConfig::typeCdnConfig:
        result = TypeCdnConfig;
        break;
    default:
        result = TypeCdnConfig;
        break;
    }

    return result;
}

void CdnConfigObject::setCore(const CdnConfig &core) {
    operator =(core);
}

CdnConfig CdnConfigObject::core() const {
    return m_core;
}

