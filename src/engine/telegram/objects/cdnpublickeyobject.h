// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_CDNPUBLICKEY_OBJECT
#define LQTG_TYPE_CDNPUBLICKEY_OBJECT

#include "telegramtypeqobject.h"
#include "telegram/types/cdnpublickey.h"

#include <QPointer>

class LIBQTELEGRAMSHARED_EXPORT CdnPublicKeyObject : public TelegramTypeQObject
{
    Q_OBJECT
    Q_ENUMS(CdnPublicKeyClassType)
    Q_PROPERTY(qint32 dcId READ dcId WRITE setDcId NOTIFY dcIdChanged)
    Q_PROPERTY(QString publicKey READ publicKey WRITE setPublicKey NOTIFY publicKeyChanged)
    Q_PROPERTY(CdnPublicKey core READ core WRITE setCore NOTIFY coreChanged)
    Q_PROPERTY(quint32 classType READ classType WRITE setClassType NOTIFY classTypeChanged)

public:
    enum CdnPublicKeyClassType {
        TypeCdnPublicKey
    };

    CdnPublicKeyObject(const CdnPublicKey &core, QObject *parent = 0);
    CdnPublicKeyObject(QObject *parent = 0);
    virtual ~CdnPublicKeyObject();

    void setDcId(qint32 dcId);
    qint32 dcId() const;

    void setPublicKey(const QString &publicKey);
    QString publicKey() const;

    void setClassType(quint32 classType);
    quint32 classType() const;

    void setCore(const CdnPublicKey &core);
    CdnPublicKey core() const;

    CdnPublicKeyObject &operator =(const CdnPublicKey &b);
    bool operator ==(const CdnPublicKey &b) const;

Q_SIGNALS:
    void coreChanged();
    void classTypeChanged();
    void dcIdChanged();
    void publicKeyChanged();

private Q_SLOTS:

private:
    CdnPublicKey m_core;
};

#endif // LQTG_TYPE_CDNPUBLICKEY_OBJECT
