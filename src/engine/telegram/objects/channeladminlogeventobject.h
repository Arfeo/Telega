// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_CHANNELADMINLOGEVENT_OBJECT
#define LQTG_TYPE_CHANNELADMINLOGEVENT_OBJECT

#include "telegramtypeqobject.h"
#include "telegram/types/channeladminlogevent.h"

#include <QPointer>
#include "channeladminlogeventactionobject.h"

class LIBQTELEGRAMSHARED_EXPORT ChannelAdminLogEventObject : public TelegramTypeQObject
{
    Q_OBJECT
    Q_ENUMS(ChannelAdminLogEventClassType)
    Q_PROPERTY(ChannelAdminLogEventActionObject* action READ action WRITE setAction NOTIFY actionChanged)
    Q_PROPERTY(qint32 date READ date WRITE setDate NOTIFY dateChanged)
    Q_PROPERTY(qint64 id READ id WRITE setId NOTIFY idChanged)
    Q_PROPERTY(qint32 userId READ userId WRITE setUserId NOTIFY userIdChanged)
    Q_PROPERTY(ChannelAdminLogEvent core READ core WRITE setCore NOTIFY coreChanged)
    Q_PROPERTY(quint32 classType READ classType WRITE setClassType NOTIFY classTypeChanged)

public:
    enum ChannelAdminLogEventClassType {
        TypeChannelAdminLogEvent
    };

    ChannelAdminLogEventObject(const ChannelAdminLogEvent &core, QObject *parent = 0);
    ChannelAdminLogEventObject(QObject *parent = 0);
    virtual ~ChannelAdminLogEventObject();

    void setAction(ChannelAdminLogEventActionObject* action);
    ChannelAdminLogEventActionObject* action() const;

    void setDate(qint32 date);
    qint32 date() const;

    void setId(qint64 id);
    qint64 id() const;

    void setUserId(qint32 userId);
    qint32 userId() const;

    void setClassType(quint32 classType);
    quint32 classType() const;

    void setCore(const ChannelAdminLogEvent &core);
    ChannelAdminLogEvent core() const;

    ChannelAdminLogEventObject &operator =(const ChannelAdminLogEvent &b);
    bool operator ==(const ChannelAdminLogEvent &b) const;

Q_SIGNALS:
    void coreChanged();
    void classTypeChanged();
    void actionChanged();
    void dateChanged();
    void idChanged();
    void userIdChanged();

private Q_SLOTS:
    void coreActionChanged();

private:
    QPointer<ChannelAdminLogEventActionObject> m_action;
    ChannelAdminLogEvent m_core;
};

#endif // LQTG_TYPE_CHANNELADMINLOGEVENT_OBJECT
