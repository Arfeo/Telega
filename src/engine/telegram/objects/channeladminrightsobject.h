// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_CHANNELADMINRIGHTS_OBJECT
#define LQTG_TYPE_CHANNELADMINRIGHTS_OBJECT

#include "telegramtypeqobject.h"
#include "telegram/types/channeladminrights.h"

#include <QPointer>

class LIBQTELEGRAMSHARED_EXPORT ChannelAdminRightsObject : public TelegramTypeQObject
{
    Q_OBJECT
    Q_ENUMS(ChannelAdminRightsClassType)
    Q_PROPERTY(bool addAdmins READ addAdmins WRITE setAddAdmins NOTIFY addAdminsChanged)
    Q_PROPERTY(bool banUsers READ banUsers WRITE setBanUsers NOTIFY banUsersChanged)
    Q_PROPERTY(bool changeInfo READ changeInfo WRITE setChangeInfo NOTIFY changeInfoChanged)
    Q_PROPERTY(bool deleteMessages READ deleteMessages WRITE setDeleteMessages NOTIFY deleteMessagesChanged)
    Q_PROPERTY(bool editMessages READ editMessages WRITE setEditMessages NOTIFY editMessagesChanged)
    Q_PROPERTY(qint32 flags READ flags WRITE setFlags NOTIFY flagsChanged)
    Q_PROPERTY(bool inviteLink READ inviteLink WRITE setInviteLink NOTIFY inviteLinkChanged)
    Q_PROPERTY(bool inviteUsers READ inviteUsers WRITE setInviteUsers NOTIFY inviteUsersChanged)
    Q_PROPERTY(bool pinMessages READ pinMessages WRITE setPinMessages NOTIFY pinMessagesChanged)
    Q_PROPERTY(bool postMessages READ postMessages WRITE setPostMessages NOTIFY postMessagesChanged)
    Q_PROPERTY(ChannelAdminRights core READ core WRITE setCore NOTIFY coreChanged)
    Q_PROPERTY(quint32 classType READ classType WRITE setClassType NOTIFY classTypeChanged)

public:
    enum ChannelAdminRightsClassType {
        TypeChannelAdminRights
    };

    ChannelAdminRightsObject(const ChannelAdminRights &core, QObject *parent = 0);
    ChannelAdminRightsObject(QObject *parent = 0);
    virtual ~ChannelAdminRightsObject();

    void setAddAdmins(bool addAdmins);
    bool addAdmins() const;

    void setBanUsers(bool banUsers);
    bool banUsers() const;

    void setChangeInfo(bool changeInfo);
    bool changeInfo() const;

    void setDeleteMessages(bool deleteMessages);
    bool deleteMessages() const;

    void setEditMessages(bool editMessages);
    bool editMessages() const;

    void setFlags(qint32 flags);
    qint32 flags() const;

    void setInviteLink(bool inviteLink);
    bool inviteLink() const;

    void setInviteUsers(bool inviteUsers);
    bool inviteUsers() const;

    void setPinMessages(bool pinMessages);
    bool pinMessages() const;

    void setPostMessages(bool postMessages);
    bool postMessages() const;

    void setClassType(quint32 classType);
    quint32 classType() const;

    void setCore(const ChannelAdminRights &core);
    ChannelAdminRights core() const;

    ChannelAdminRightsObject &operator =(const ChannelAdminRights &b);
    bool operator ==(const ChannelAdminRights &b) const;

Q_SIGNALS:
    void coreChanged();
    void classTypeChanged();
    void addAdminsChanged();
    void banUsersChanged();
    void changeInfoChanged();
    void deleteMessagesChanged();
    void editMessagesChanged();
    void flagsChanged();
    void inviteLinkChanged();
    void inviteUsersChanged();
    void pinMessagesChanged();
    void postMessagesChanged();

private Q_SLOTS:

private:
    ChannelAdminRights m_core;
};

#endif // LQTG_TYPE_CHANNELADMINRIGHTS_OBJECT
