// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_HIGHSCORE_OBJECT
#define LQTG_TYPE_HIGHSCORE_OBJECT

#include "telegramtypeqobject.h"
#include "telegram/types/highscore.h"

#include <QPointer>

class LIBQTELEGRAMSHARED_EXPORT HighScoreObject : public TelegramTypeQObject
{
    Q_OBJECT
    Q_ENUMS(HighScoreClassType)
    Q_PROPERTY(qint32 pos READ pos WRITE setPos NOTIFY posChanged)
    Q_PROPERTY(qint32 score READ score WRITE setScore NOTIFY scoreChanged)
    Q_PROPERTY(qint32 userId READ userId WRITE setUserId NOTIFY userIdChanged)
    Q_PROPERTY(HighScore core READ core WRITE setCore NOTIFY coreChanged)
    Q_PROPERTY(quint32 classType READ classType WRITE setClassType NOTIFY classTypeChanged)

public:
    enum HighScoreClassType {
        TypeHighScore
    };

    HighScoreObject(const HighScore &core, QObject *parent = 0);
    HighScoreObject(QObject *parent = 0);
    virtual ~HighScoreObject();

    void setPos(qint32 pos);
    qint32 pos() const;

    void setScore(qint32 score);
    qint32 score() const;

    void setUserId(qint32 userId);
    qint32 userId() const;

    void setClassType(quint32 classType);
    quint32 classType() const;

    void setCore(const HighScore &core);
    HighScore core() const;

    HighScoreObject &operator =(const HighScore &b);
    bool operator ==(const HighScore &b) const;

Q_SIGNALS:
    void coreChanged();
    void classTypeChanged();
    void posChanged();
    void scoreChanged();
    void userIdChanged();

private Q_SLOTS:

private:
    HighScore m_core;
};

#endif // LQTG_TYPE_HIGHSCORE_OBJECT
