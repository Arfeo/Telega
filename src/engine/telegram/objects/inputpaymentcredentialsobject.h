// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_INPUTPAYMENTCREDENTIALS_OBJECT
#define LQTG_TYPE_INPUTPAYMENTCREDENTIALS_OBJECT

#include "telegramtypeqobject.h"
#include "telegram/types/inputpaymentcredentials.h"

#include <QPointer>
#include "datajsonobject.h"

class LIBQTELEGRAMSHARED_EXPORT InputPaymentCredentialsObject : public TelegramTypeQObject
{
    Q_OBJECT
    Q_ENUMS(InputPaymentCredentialsClassType)
    Q_PROPERTY(DataJSONObject* data READ data WRITE setData NOTIFY dataChanged)
    Q_PROPERTY(qint32 flags READ flags WRITE setFlags NOTIFY flagsChanged)
    Q_PROPERTY(QString id READ id WRITE setId NOTIFY idChanged)
    Q_PROPERTY(bool save READ save WRITE setSave NOTIFY saveChanged)
    Q_PROPERTY(QByteArray tmpPassword READ tmpPassword WRITE setTmpPassword NOTIFY tmpPasswordChanged)
    Q_PROPERTY(InputPaymentCredentials core READ core WRITE setCore NOTIFY coreChanged)
    Q_PROPERTY(quint32 classType READ classType WRITE setClassType NOTIFY classTypeChanged)

public:
    enum InputPaymentCredentialsClassType {
        TypeInputPaymentCredentialsSaved,
        TypeInputPaymentCredentials
    };

    InputPaymentCredentialsObject(const InputPaymentCredentials &core, QObject *parent = 0);
    InputPaymentCredentialsObject(QObject *parent = 0);
    virtual ~InputPaymentCredentialsObject();

    void setData(DataJSONObject* data);
    DataJSONObject* data() const;

    void setFlags(qint32 flags);
    qint32 flags() const;

    void setId(const QString &id);
    QString id() const;

    void setSave(bool save);
    bool save() const;

    void setTmpPassword(const QByteArray &tmpPassword);
    QByteArray tmpPassword() const;

    void setClassType(quint32 classType);
    quint32 classType() const;

    void setCore(const InputPaymentCredentials &core);
    InputPaymentCredentials core() const;

    InputPaymentCredentialsObject &operator =(const InputPaymentCredentials &b);
    bool operator ==(const InputPaymentCredentials &b) const;

Q_SIGNALS:
    void coreChanged();
    void classTypeChanged();
    void dataChanged();
    void flagsChanged();
    void idChanged();
    void saveChanged();
    void tmpPasswordChanged();

private Q_SLOTS:
    void coreDataChanged();

private:
    QPointer<DataJSONObject> m_data;
    InputPaymentCredentials m_core;
};

#endif // LQTG_TYPE_INPUTPAYMENTCREDENTIALS_OBJECT
