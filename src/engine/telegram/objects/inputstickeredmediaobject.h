// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_INPUTSTICKEREDMEDIA_OBJECT
#define LQTG_TYPE_INPUTSTICKEREDMEDIA_OBJECT

#include "telegramtypeqobject.h"
#include "telegram/types/inputstickeredmedia.h"

#include <QPointer>
#include "inputdocumentobject.h"
#include "inputphotoobject.h"

class LIBQTELEGRAMSHARED_EXPORT InputStickeredMediaObject : public TelegramTypeQObject
{
    Q_OBJECT
    Q_ENUMS(InputStickeredMediaClassType)
    Q_PROPERTY(InputDocumentObject* idInputDocument READ idInputDocument WRITE setIdInputDocument NOTIFY idInputDocumentChanged)
    Q_PROPERTY(InputPhotoObject* idInputPhoto READ idInputPhoto WRITE setIdInputPhoto NOTIFY idInputPhotoChanged)
    Q_PROPERTY(InputStickeredMedia core READ core WRITE setCore NOTIFY coreChanged)
    Q_PROPERTY(quint32 classType READ classType WRITE setClassType NOTIFY classTypeChanged)

public:
    enum InputStickeredMediaClassType {
        TypeInputStickeredMediaPhoto,
        TypeInputStickeredMediaDocument
    };

    InputStickeredMediaObject(const InputStickeredMedia &core, QObject *parent = 0);
    InputStickeredMediaObject(QObject *parent = 0);
    virtual ~InputStickeredMediaObject();

    void setIdInputDocument(InputDocumentObject* idInputDocument);
    InputDocumentObject* idInputDocument() const;

    void setIdInputPhoto(InputPhotoObject* idInputPhoto);
    InputPhotoObject* idInputPhoto() const;

    void setClassType(quint32 classType);
    quint32 classType() const;

    void setCore(const InputStickeredMedia &core);
    InputStickeredMedia core() const;

    InputStickeredMediaObject &operator =(const InputStickeredMedia &b);
    bool operator ==(const InputStickeredMedia &b) const;

Q_SIGNALS:
    void coreChanged();
    void classTypeChanged();
    void idInputDocumentChanged();
    void idInputPhotoChanged();

private Q_SLOTS:
    void coreIdInputDocumentChanged();
    void coreIdInputPhotoChanged();

private:
    QPointer<InputDocumentObject> m_idInputDocument;
    QPointer<InputPhotoObject> m_idInputPhoto;
    InputStickeredMedia m_core;
};

#endif // LQTG_TYPE_INPUTSTICKEREDMEDIA_OBJECT
