// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_INPUTSTICKERSETITEM_OBJECT
#define LQTG_TYPE_INPUTSTICKERSETITEM_OBJECT

#include "telegramtypeqobject.h"
#include "telegram/types/inputstickersetitem.h"

#include <QPointer>
#include "inputdocumentobject.h"
#include "maskcoordsobject.h"

class LIBQTELEGRAMSHARED_EXPORT InputStickerSetItemObject : public TelegramTypeQObject
{
    Q_OBJECT
    Q_ENUMS(InputStickerSetItemClassType)
    Q_PROPERTY(InputDocumentObject* document READ document WRITE setDocument NOTIFY documentChanged)
    Q_PROPERTY(QString emoji READ emoji WRITE setEmoji NOTIFY emojiChanged)
    Q_PROPERTY(qint32 flags READ flags WRITE setFlags NOTIFY flagsChanged)
    Q_PROPERTY(MaskCoordsObject* maskCoords READ maskCoords WRITE setMaskCoords NOTIFY maskCoordsChanged)
    Q_PROPERTY(InputStickerSetItem core READ core WRITE setCore NOTIFY coreChanged)
    Q_PROPERTY(quint32 classType READ classType WRITE setClassType NOTIFY classTypeChanged)

public:
    enum InputStickerSetItemClassType {
        TypeInputStickerSetItem
    };

    InputStickerSetItemObject(const InputStickerSetItem &core, QObject *parent = 0);
    InputStickerSetItemObject(QObject *parent = 0);
    virtual ~InputStickerSetItemObject();

    void setDocument(InputDocumentObject* document);
    InputDocumentObject* document() const;

    void setEmoji(const QString &emoji);
    QString emoji() const;

    void setFlags(qint32 flags);
    qint32 flags() const;

    void setMaskCoords(MaskCoordsObject* maskCoords);
    MaskCoordsObject* maskCoords() const;

    void setClassType(quint32 classType);
    quint32 classType() const;

    void setCore(const InputStickerSetItem &core);
    InputStickerSetItem core() const;

    InputStickerSetItemObject &operator =(const InputStickerSetItem &b);
    bool operator ==(const InputStickerSetItem &b) const;

Q_SIGNALS:
    void coreChanged();
    void classTypeChanged();
    void documentChanged();
    void emojiChanged();
    void flagsChanged();
    void maskCoordsChanged();

private Q_SLOTS:
    void coreDocumentChanged();
    void coreMaskCoordsChanged();

private:
    QPointer<InputDocumentObject> m_document;
    QPointer<MaskCoordsObject> m_maskCoords;
    InputStickerSetItem m_core;
};

#endif // LQTG_TYPE_INPUTSTICKERSETITEM_OBJECT
