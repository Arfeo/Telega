// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_LANGPACKLANGUAGE_OBJECT
#define LQTG_TYPE_LANGPACKLANGUAGE_OBJECT

#include "telegramtypeqobject.h"
#include "telegram/types/langpacklanguage.h"

#include <QPointer>

class LIBQTELEGRAMSHARED_EXPORT LangPackLanguageObject : public TelegramTypeQObject
{
    Q_OBJECT
    Q_ENUMS(LangPackLanguageClassType)
    Q_PROPERTY(QString langCode READ langCode WRITE setLangCode NOTIFY langCodeChanged)
    Q_PROPERTY(QString name READ name WRITE setName NOTIFY nameChanged)
    Q_PROPERTY(QString nativeName READ nativeName WRITE setNativeName NOTIFY nativeNameChanged)
    Q_PROPERTY(LangPackLanguage core READ core WRITE setCore NOTIFY coreChanged)
    Q_PROPERTY(quint32 classType READ classType WRITE setClassType NOTIFY classTypeChanged)

public:
    enum LangPackLanguageClassType {
        TypeLangPackLanguage
    };

    LangPackLanguageObject(const LangPackLanguage &core, QObject *parent = 0);
    LangPackLanguageObject(QObject *parent = 0);
    virtual ~LangPackLanguageObject();

    void setLangCode(const QString &langCode);
    QString langCode() const;

    void setName(const QString &name);
    QString name() const;

    void setNativeName(const QString &nativeName);
    QString nativeName() const;

    void setClassType(quint32 classType);
    quint32 classType() const;

    void setCore(const LangPackLanguage &core);
    LangPackLanguage core() const;

    LangPackLanguageObject &operator =(const LangPackLanguage &b);
    bool operator ==(const LangPackLanguage &b) const;

Q_SIGNALS:
    void coreChanged();
    void classTypeChanged();
    void langCodeChanged();
    void nameChanged();
    void nativeNameChanged();

private Q_SLOTS:

private:
    LangPackLanguage m_core;
};

#endif // LQTG_TYPE_LANGPACKLANGUAGE_OBJECT
