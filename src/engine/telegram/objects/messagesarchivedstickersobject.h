// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_MESSAGESARCHIVEDSTICKERS_OBJECT
#define LQTG_TYPE_MESSAGESARCHIVEDSTICKERS_OBJECT

#include "telegramtypeqobject.h"
#include "telegram/types/messagesarchivedstickers.h"

#include <QPointer>

class LIBQTELEGRAMSHARED_EXPORT MessagesArchivedStickersObject : public TelegramTypeQObject
{
    Q_OBJECT
    Q_ENUMS(MessagesArchivedStickersClassType)
    Q_PROPERTY(qint32 count READ count WRITE setCount NOTIFY countChanged)
    Q_PROPERTY(QList<StickerSetCovered> sets READ sets WRITE setSets NOTIFY setsChanged)
    Q_PROPERTY(MessagesArchivedStickers core READ core WRITE setCore NOTIFY coreChanged)
    Q_PROPERTY(quint32 classType READ classType WRITE setClassType NOTIFY classTypeChanged)

public:
    enum MessagesArchivedStickersClassType {
        TypeMessagesArchivedStickers
    };

    MessagesArchivedStickersObject(const MessagesArchivedStickers &core, QObject *parent = 0);
    MessagesArchivedStickersObject(QObject *parent = 0);
    virtual ~MessagesArchivedStickersObject();

    void setCount(qint32 count);
    qint32 count() const;

    void setSets(const QList<StickerSetCovered> &sets);
    QList<StickerSetCovered> sets() const;

    void setClassType(quint32 classType);
    quint32 classType() const;

    void setCore(const MessagesArchivedStickers &core);
    MessagesArchivedStickers core() const;

    MessagesArchivedStickersObject &operator =(const MessagesArchivedStickers &b);
    bool operator ==(const MessagesArchivedStickers &b) const;

Q_SIGNALS:
    void coreChanged();
    void classTypeChanged();
    void countChanged();
    void setsChanged();

private Q_SLOTS:

private:
    MessagesArchivedStickers m_core;
};

#endif // LQTG_TYPE_MESSAGESARCHIVEDSTICKERS_OBJECT
