// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_MESSAGESBOTCALLBACKANSWER_OBJECT
#define LQTG_TYPE_MESSAGESBOTCALLBACKANSWER_OBJECT

#include "telegramtypeqobject.h"
#include "telegram/types/messagesbotcallbackanswer.h"

#include <QPointer>

class LIBQTELEGRAMSHARED_EXPORT MessagesBotCallbackAnswerObject : public TelegramTypeQObject
{
    Q_OBJECT
    Q_ENUMS(MessagesBotCallbackAnswerClassType)
    Q_PROPERTY(bool alert READ alert WRITE setAlert NOTIFY alertChanged)
    Q_PROPERTY(qint32 cacheTime READ cacheTime WRITE setCacheTime NOTIFY cacheTimeChanged)
    Q_PROPERTY(qint32 flags READ flags WRITE setFlags NOTIFY flagsChanged)
    Q_PROPERTY(bool hasUrl READ hasUrl WRITE setHasUrl NOTIFY hasUrlChanged)
    Q_PROPERTY(QString message READ message WRITE setMessage NOTIFY messageChanged)
    Q_PROPERTY(QString url READ url WRITE setUrl NOTIFY urlChanged)
    Q_PROPERTY(MessagesBotCallbackAnswer core READ core WRITE setCore NOTIFY coreChanged)
    Q_PROPERTY(quint32 classType READ classType WRITE setClassType NOTIFY classTypeChanged)

public:
    enum MessagesBotCallbackAnswerClassType {
        TypeMessagesBotCallbackAnswer
    };

    MessagesBotCallbackAnswerObject(const MessagesBotCallbackAnswer &core, QObject *parent = 0);
    MessagesBotCallbackAnswerObject(QObject *parent = 0);
    virtual ~MessagesBotCallbackAnswerObject();

    void setAlert(bool alert);
    bool alert() const;

    void setCacheTime(qint32 cacheTime);
    qint32 cacheTime() const;

    void setFlags(qint32 flags);
    qint32 flags() const;

    void setHasUrl(bool hasUrl);
    bool hasUrl() const;

    void setMessage(const QString &message);
    QString message() const;

    void setUrl(const QString &url);
    QString url() const;

    void setClassType(quint32 classType);
    quint32 classType() const;

    void setCore(const MessagesBotCallbackAnswer &core);
    MessagesBotCallbackAnswer core() const;

    MessagesBotCallbackAnswerObject &operator =(const MessagesBotCallbackAnswer &b);
    bool operator ==(const MessagesBotCallbackAnswer &b) const;

Q_SIGNALS:
    void coreChanged();
    void classTypeChanged();
    void alertChanged();
    void cacheTimeChanged();
    void flagsChanged();
    void hasUrlChanged();
    void messageChanged();
    void urlChanged();

private Q_SLOTS:

private:
    MessagesBotCallbackAnswer m_core;
};

#endif // LQTG_TYPE_MESSAGESBOTCALLBACKANSWER_OBJECT
