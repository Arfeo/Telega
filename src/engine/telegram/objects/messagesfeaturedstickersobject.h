// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_MESSAGESFEATUREDSTICKERS_OBJECT
#define LQTG_TYPE_MESSAGESFEATUREDSTICKERS_OBJECT

#include "telegramtypeqobject.h"
#include "telegram/types/messagesfeaturedstickers.h"

#include <QPointer>

class LIBQTELEGRAMSHARED_EXPORT MessagesFeaturedStickersObject : public TelegramTypeQObject
{
    Q_OBJECT
    Q_ENUMS(MessagesFeaturedStickersClassType)
    Q_PROPERTY(qint32 hash READ hash WRITE setHash NOTIFY hashChanged)
    Q_PROPERTY(QList<StickerSetCovered> sets READ sets WRITE setSets NOTIFY setsChanged)
    Q_PROPERTY(QList<qint64> unread READ unread WRITE setUnread NOTIFY unreadChanged)
    Q_PROPERTY(MessagesFeaturedStickers core READ core WRITE setCore NOTIFY coreChanged)
    Q_PROPERTY(quint32 classType READ classType WRITE setClassType NOTIFY classTypeChanged)

public:
    enum MessagesFeaturedStickersClassType {
        TypeMessagesFeaturedStickersNotModified,
        TypeMessagesFeaturedStickers
    };

    MessagesFeaturedStickersObject(const MessagesFeaturedStickers &core, QObject *parent = 0);
    MessagesFeaturedStickersObject(QObject *parent = 0);
    virtual ~MessagesFeaturedStickersObject();

    void setHash(qint32 hash);
    qint32 hash() const;

    void setSets(const QList<StickerSetCovered> &sets);
    QList<StickerSetCovered> sets() const;

    void setUnread(const QList<qint64> &unread);
    QList<qint64> unread() const;

    void setClassType(quint32 classType);
    quint32 classType() const;

    void setCore(const MessagesFeaturedStickers &core);
    MessagesFeaturedStickers core() const;

    MessagesFeaturedStickersObject &operator =(const MessagesFeaturedStickers &b);
    bool operator ==(const MessagesFeaturedStickers &b) const;

Q_SIGNALS:
    void coreChanged();
    void classTypeChanged();
    void hashChanged();
    void setsChanged();
    void unreadChanged();

private Q_SLOTS:

private:
    MessagesFeaturedStickers m_core;
};

#endif // LQTG_TYPE_MESSAGESFEATUREDSTICKERS_OBJECT
