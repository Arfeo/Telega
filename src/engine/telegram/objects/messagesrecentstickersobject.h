// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_MESSAGESRECENTSTICKERS_OBJECT
#define LQTG_TYPE_MESSAGESRECENTSTICKERS_OBJECT

#include "telegramtypeqobject.h"
#include "telegram/types/messagesrecentstickers.h"

#include <QPointer>

class LIBQTELEGRAMSHARED_EXPORT MessagesRecentStickersObject : public TelegramTypeQObject
{
    Q_OBJECT
    Q_ENUMS(MessagesRecentStickersClassType)
    Q_PROPERTY(qint32 hash READ hash WRITE setHash NOTIFY hashChanged)
    Q_PROPERTY(QList<Document> stickers READ stickers WRITE setStickers NOTIFY stickersChanged)
    Q_PROPERTY(MessagesRecentStickers core READ core WRITE setCore NOTIFY coreChanged)
    Q_PROPERTY(quint32 classType READ classType WRITE setClassType NOTIFY classTypeChanged)

public:
    enum MessagesRecentStickersClassType {
        TypeMessagesRecentStickersNotModified,
        TypeMessagesRecentStickers
    };

    MessagesRecentStickersObject(const MessagesRecentStickers &core, QObject *parent = 0);
    MessagesRecentStickersObject(QObject *parent = 0);
    virtual ~MessagesRecentStickersObject();

    void setHash(qint32 hash);
    qint32 hash() const;

    void setStickers(const QList<Document> &stickers);
    QList<Document> stickers() const;

    void setClassType(quint32 classType);
    quint32 classType() const;

    void setCore(const MessagesRecentStickers &core);
    MessagesRecentStickers core() const;

    MessagesRecentStickersObject &operator =(const MessagesRecentStickers &b);
    bool operator ==(const MessagesRecentStickers &b) const;

Q_SIGNALS:
    void coreChanged();
    void classTypeChanged();
    void hashChanged();
    void stickersChanged();

private Q_SLOTS:

private:
    MessagesRecentStickers m_core;
};

#endif // LQTG_TYPE_MESSAGESRECENTSTICKERS_OBJECT
