// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_PHONEPHONECALL_OBJECT
#define LQTG_TYPE_PHONEPHONECALL_OBJECT

#include "telegramtypeqobject.h"
#include "telegram/types/phonephonecall.h"

#include <QPointer>
#include "phonecallobject.h"

class LIBQTELEGRAMSHARED_EXPORT PhonePhoneCallObject : public TelegramTypeQObject
{
    Q_OBJECT
    Q_ENUMS(PhonePhoneCallClassType)
    Q_PROPERTY(PhoneCallObject* phoneCall READ phoneCall WRITE setPhoneCall NOTIFY phoneCallChanged)
    Q_PROPERTY(QList<User> users READ users WRITE setUsers NOTIFY usersChanged)
    Q_PROPERTY(PhonePhoneCall core READ core WRITE setCore NOTIFY coreChanged)
    Q_PROPERTY(quint32 classType READ classType WRITE setClassType NOTIFY classTypeChanged)

public:
    enum PhonePhoneCallClassType {
        TypePhonePhoneCall
    };

    PhonePhoneCallObject(const PhonePhoneCall &core, QObject *parent = 0);
    PhonePhoneCallObject(QObject *parent = 0);
    virtual ~PhonePhoneCallObject();

    void setPhoneCall(PhoneCallObject* phoneCall);
    PhoneCallObject* phoneCall() const;

    void setUsers(const QList<User> &users);
    QList<User> users() const;

    void setClassType(quint32 classType);
    quint32 classType() const;

    void setCore(const PhonePhoneCall &core);
    PhonePhoneCall core() const;

    PhonePhoneCallObject &operator =(const PhonePhoneCall &b);
    bool operator ==(const PhonePhoneCall &b) const;

Q_SIGNALS:
    void coreChanged();
    void classTypeChanged();
    void phoneCallChanged();
    void usersChanged();

private Q_SLOTS:
    void corePhoneCallChanged();

private:
    QPointer<PhoneCallObject> m_phoneCall;
    PhonePhoneCall m_core;
};

#endif // LQTG_TYPE_PHONEPHONECALL_OBJECT
