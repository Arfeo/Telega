// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_UPLOADCDNFILE_OBJECT
#define LQTG_TYPE_UPLOADCDNFILE_OBJECT

#include "telegramtypeqobject.h"
#include "telegram/types/uploadcdnfile.h"

#include <QPointer>

class LIBQTELEGRAMSHARED_EXPORT UploadCdnFileObject : public TelegramTypeQObject
{
    Q_OBJECT
    Q_ENUMS(UploadCdnFileClassType)
    Q_PROPERTY(QByteArray bytes READ bytes WRITE setBytes NOTIFY bytesChanged)
    Q_PROPERTY(QByteArray requestToken READ requestToken WRITE setRequestToken NOTIFY requestTokenChanged)
    Q_PROPERTY(UploadCdnFile core READ core WRITE setCore NOTIFY coreChanged)
    Q_PROPERTY(quint32 classType READ classType WRITE setClassType NOTIFY classTypeChanged)

public:
    enum UploadCdnFileClassType {
        TypeUploadCdnFileReuploadNeeded,
        TypeUploadCdnFile
    };

    UploadCdnFileObject(const UploadCdnFile &core, QObject *parent = 0);
    UploadCdnFileObject(QObject *parent = 0);
    virtual ~UploadCdnFileObject();

    void setBytes(const QByteArray &bytes);
    QByteArray bytes() const;

    void setRequestToken(const QByteArray &requestToken);
    QByteArray requestToken() const;

    void setClassType(quint32 classType);
    quint32 classType() const;

    void setCore(const UploadCdnFile &core);
    UploadCdnFile core() const;

    UploadCdnFileObject &operator =(const UploadCdnFile &b);
    bool operator ==(const UploadCdnFile &b) const;

Q_SIGNALS:
    void coreChanged();
    void classTypeChanged();
    void bytesChanged();
    void requestTokenChanged();

private Q_SLOTS:

private:
    UploadCdnFile m_core;
};

#endif // LQTG_TYPE_UPLOADCDNFILE_OBJECT
