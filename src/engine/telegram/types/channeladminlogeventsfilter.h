// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_CHANNELADMINLOGEVENTSFILTER
#define LQTG_TYPE_CHANNELADMINLOGEVENTSFILTER

#include "telegramtypeobject.h"

#include <QMetaType>
#include <QVariant>
#include "../coretypes.h"

#include <QDataStream>

#include <QtGlobal>

class LIBQTELEGRAMSHARED_EXPORT ChannelAdminLogEventsFilter : public TelegramTypeObject
{
public:
    enum ChannelAdminLogEventsFilterClassType {
        typeChannelAdminLogEventsFilter = 0xea107ae4
    };

    ChannelAdminLogEventsFilter(ChannelAdminLogEventsFilterClassType classType = typeChannelAdminLogEventsFilter, InboundPkt *in = 0);
    ChannelAdminLogEventsFilter(InboundPkt *in);
    ChannelAdminLogEventsFilter(const Null&);
    ChannelAdminLogEventsFilter(const ChannelAdminLogEventsFilter &another);
    virtual ~ChannelAdminLogEventsFilter();

    void setBan(bool ban);
    bool ban() const;

    void setDeleteValue(bool deleteValue);
    bool deleteValue() const;

    void setDemote(bool demote);
    bool demote() const;

    void setEdit(bool edit);
    bool edit() const;

    void setFlags(qint32 flags);
    qint32 flags() const;

    void setInfo(bool info);
    bool info() const;

    void setInvite(bool invite);
    bool invite() const;

    void setJoin(bool join);
    bool join() const;

    void setKick(bool kick);
    bool kick() const;

    void setLeave(bool leave);
    bool leave() const;

    void setPinned(bool pinned);
    bool pinned() const;

    void setPromote(bool promote);
    bool promote() const;

    void setSettings(bool settings);
    bool settings() const;

    void setUnban(bool unban);
    bool unban() const;

    void setUnkick(bool unkick);
    bool unkick() const;

    void setClassType(ChannelAdminLogEventsFilterClassType classType);
    ChannelAdminLogEventsFilterClassType classType() const;

    bool fetch(InboundPkt *in);
    bool push(OutboundPkt *out) const;

    QMap<QString, QVariant> toMap() const;
    static ChannelAdminLogEventsFilter fromMap(const QMap<QString, QVariant> &map);
    static ChannelAdminLogEventsFilter fromJson(const QString &json);

    bool operator ==(const ChannelAdminLogEventsFilter &b) const;
    ChannelAdminLogEventsFilter &operator =(const ChannelAdminLogEventsFilter &b);

    bool operator==(bool stt) const { return isNull() != stt; }
    bool operator!=(bool stt) const { return !operator ==(stt); }

    QByteArray getHash(QCryptographicHash::Algorithm alg = QCryptographicHash::Md5) const;

private:
    qint32 m_flags;
    ChannelAdminLogEventsFilterClassType m_classType;
};

Q_DECLARE_METATYPE(ChannelAdminLogEventsFilter)

QDataStream LIBQTELEGRAMSHARED_EXPORT &operator<<(QDataStream &stream, const ChannelAdminLogEventsFilter &item);
QDataStream LIBQTELEGRAMSHARED_EXPORT &operator>>(QDataStream &stream, ChannelAdminLogEventsFilter &item);

QDebug LIBQTELEGRAMSHARED_EXPORT operator<<(QDebug debug,  const ChannelAdminLogEventsFilter &item);

#endif // LQTG_TYPE_CHANNELADMINLOGEVENTSFILTER
