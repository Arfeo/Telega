// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_INLINEBOTSWITCHPM
#define LQTG_TYPE_INLINEBOTSWITCHPM

#include "telegramtypeobject.h"

#include <QMetaType>
#include <QVariant>
#include "../coretypes.h"

#include <QDataStream>

#include <QString>

class LIBQTELEGRAMSHARED_EXPORT InlineBotSwitchPM : public TelegramTypeObject
{
public:
    enum InlineBotSwitchPMClassType {
        typeInlineBotSwitchPM = 0x3c20629f
    };

    InlineBotSwitchPM(InlineBotSwitchPMClassType classType = typeInlineBotSwitchPM, InboundPkt *in = 0);
    InlineBotSwitchPM(InboundPkt *in);
    InlineBotSwitchPM(const Null&);
    InlineBotSwitchPM(const InlineBotSwitchPM &another);
    virtual ~InlineBotSwitchPM();

    void setStartParam(const QString &startParam);
    QString startParam() const;

    void setText(const QString &text);
    QString text() const;

    void setClassType(InlineBotSwitchPMClassType classType);
    InlineBotSwitchPMClassType classType() const;

    bool fetch(InboundPkt *in);
    bool push(OutboundPkt *out) const;

    QMap<QString, QVariant> toMap() const;
    static InlineBotSwitchPM fromMap(const QMap<QString, QVariant> &map);
    static InlineBotSwitchPM fromJson(const QString &json);

    bool operator ==(const InlineBotSwitchPM &b) const;
    InlineBotSwitchPM &operator =(const InlineBotSwitchPM &b);

    bool operator==(bool stt) const { return isNull() != stt; }
    bool operator!=(bool stt) const { return !operator ==(stt); }

    QByteArray getHash(QCryptographicHash::Algorithm alg = QCryptographicHash::Md5) const;

private:
    QString m_startParam;
    QString m_text;
    InlineBotSwitchPMClassType m_classType;
};

Q_DECLARE_METATYPE(InlineBotSwitchPM)

QDataStream LIBQTELEGRAMSHARED_EXPORT &operator<<(QDataStream &stream, const InlineBotSwitchPM &item);
QDataStream LIBQTELEGRAMSHARED_EXPORT &operator>>(QDataStream &stream, InlineBotSwitchPM &item);

QDebug LIBQTELEGRAMSHARED_EXPORT operator<<(QDebug debug,  const InlineBotSwitchPM &item);

#endif // LQTG_TYPE_INLINEBOTSWITCHPM
