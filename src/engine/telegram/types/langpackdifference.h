// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_LANGPACKDIFFERENCE
#define LQTG_TYPE_LANGPACKDIFFERENCE

#include "telegramtypeobject.h"

#include <QMetaType>
#include <QVariant>
#include "../coretypes.h"

#include <QDataStream>

#include <QtGlobal>
#include <QString>
#include <QList>
#include "langpackstring.h"

class LIBQTELEGRAMSHARED_EXPORT LangPackDifference : public TelegramTypeObject
{
public:
    enum LangPackDifferenceClassType {
        typeLangPackDifference = 0xf385c1f6
    };

    LangPackDifference(LangPackDifferenceClassType classType = typeLangPackDifference, InboundPkt *in = 0);
    LangPackDifference(InboundPkt *in);
    LangPackDifference(const Null&);
    LangPackDifference(const LangPackDifference &another);
    virtual ~LangPackDifference();

    void setFromVersion(qint32 fromVersion);
    qint32 fromVersion() const;

    void setLangCode(const QString &langCode);
    QString langCode() const;

    void setStrings(const QList<LangPackString> &strings);
    QList<LangPackString> strings() const;

    void setVersion(qint32 version);
    qint32 version() const;

    void setClassType(LangPackDifferenceClassType classType);
    LangPackDifferenceClassType classType() const;

    bool fetch(InboundPkt *in);
    bool push(OutboundPkt *out) const;

    QMap<QString, QVariant> toMap() const;
    static LangPackDifference fromMap(const QMap<QString, QVariant> &map);
    static LangPackDifference fromJson(const QString &json);

    bool operator ==(const LangPackDifference &b) const;
    LangPackDifference &operator =(const LangPackDifference &b);

    bool operator==(bool stt) const { return isNull() != stt; }
    bool operator!=(bool stt) const { return !operator ==(stt); }

    QByteArray getHash(QCryptographicHash::Algorithm alg = QCryptographicHash::Md5) const;

private:
    qint32 m_fromVersion;
    QString m_langCode;
    QList<LangPackString> m_strings;
    qint32 m_version;
    LangPackDifferenceClassType m_classType;
};

Q_DECLARE_METATYPE(LangPackDifference)

QDataStream LIBQTELEGRAMSHARED_EXPORT &operator<<(QDataStream &stream, const LangPackDifference &item);
QDataStream LIBQTELEGRAMSHARED_EXPORT &operator>>(QDataStream &stream, LangPackDifference &item);

QDebug LIBQTELEGRAMSHARED_EXPORT operator<<(QDebug debug,  const LangPackDifference &item);

#endif // LQTG_TYPE_LANGPACKDIFFERENCE
