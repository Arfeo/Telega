// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_MESSAGESARCHIVEDSTICKERS
#define LQTG_TYPE_MESSAGESARCHIVEDSTICKERS

#include "telegramtypeobject.h"

#include <QMetaType>
#include <QVariant>
#include "../coretypes.h"

#include <QDataStream>

#include <QtGlobal>
#include <QList>
#include "stickersetcovered.h"

class LIBQTELEGRAMSHARED_EXPORT MessagesArchivedStickers : public TelegramTypeObject
{
public:
    enum MessagesArchivedStickersClassType {
        typeMessagesArchivedStickers = 0x4fcba9c8
    };

    MessagesArchivedStickers(MessagesArchivedStickersClassType classType = typeMessagesArchivedStickers, InboundPkt *in = 0);
    MessagesArchivedStickers(InboundPkt *in);
    MessagesArchivedStickers(const Null&);
    MessagesArchivedStickers(const MessagesArchivedStickers &another);
    virtual ~MessagesArchivedStickers();

    void setCount(qint32 count);
    qint32 count() const;

    void setSets(const QList<StickerSetCovered> &sets);
    QList<StickerSetCovered> sets() const;

    void setClassType(MessagesArchivedStickersClassType classType);
    MessagesArchivedStickersClassType classType() const;

    bool fetch(InboundPkt *in);
    bool push(OutboundPkt *out) const;

    QMap<QString, QVariant> toMap() const;
    static MessagesArchivedStickers fromMap(const QMap<QString, QVariant> &map);
    static MessagesArchivedStickers fromJson(const QString &json);

    bool operator ==(const MessagesArchivedStickers &b) const;
    MessagesArchivedStickers &operator =(const MessagesArchivedStickers &b);

    bool operator==(bool stt) const { return isNull() != stt; }
    bool operator!=(bool stt) const { return !operator ==(stt); }

    QByteArray getHash(QCryptographicHash::Algorithm alg = QCryptographicHash::Md5) const;

private:
    qint32 m_count;
    QList<StickerSetCovered> m_sets;
    MessagesArchivedStickersClassType m_classType;
};

Q_DECLARE_METATYPE(MessagesArchivedStickers)

QDataStream LIBQTELEGRAMSHARED_EXPORT &operator<<(QDataStream &stream, const MessagesArchivedStickers &item);
QDataStream LIBQTELEGRAMSHARED_EXPORT &operator>>(QDataStream &stream, MessagesArchivedStickers &item);

QDebug LIBQTELEGRAMSHARED_EXPORT operator<<(QDebug debug,  const MessagesArchivedStickers &item);

#endif // LQTG_TYPE_MESSAGESARCHIVEDSTICKERS
