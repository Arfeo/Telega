// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_PAYMENTSAVEDCREDENTIALS
#define LQTG_TYPE_PAYMENTSAVEDCREDENTIALS

#include "telegramtypeobject.h"

#include <QMetaType>
#include <QVariant>
#include "../coretypes.h"

#include <QDataStream>

#include <QString>

class LIBQTELEGRAMSHARED_EXPORT PaymentSavedCredentials : public TelegramTypeObject
{
public:
    enum PaymentSavedCredentialsClassType {
        typePaymentSavedCredentialsCard = 0xcdc27a1f
    };

    PaymentSavedCredentials(PaymentSavedCredentialsClassType classType = typePaymentSavedCredentialsCard, InboundPkt *in = 0);
    PaymentSavedCredentials(InboundPkt *in);
    PaymentSavedCredentials(const Null&);
    PaymentSavedCredentials(const PaymentSavedCredentials &another);
    virtual ~PaymentSavedCredentials();

    void setId(const QString &id);
    QString id() const;

    void setTitle(const QString &title);
    QString title() const;

    void setClassType(PaymentSavedCredentialsClassType classType);
    PaymentSavedCredentialsClassType classType() const;

    bool fetch(InboundPkt *in);
    bool push(OutboundPkt *out) const;

    QMap<QString, QVariant> toMap() const;
    static PaymentSavedCredentials fromMap(const QMap<QString, QVariant> &map);
    static PaymentSavedCredentials fromJson(const QString &json);

    bool operator ==(const PaymentSavedCredentials &b) const;
    PaymentSavedCredentials &operator =(const PaymentSavedCredentials &b);

    bool operator==(bool stt) const { return isNull() != stt; }
    bool operator!=(bool stt) const { return !operator ==(stt); }

    QByteArray getHash(QCryptographicHash::Algorithm alg = QCryptographicHash::Md5) const;

private:
    QString m_id;
    QString m_title;
    PaymentSavedCredentialsClassType m_classType;
};

Q_DECLARE_METATYPE(PaymentSavedCredentials)

QDataStream LIBQTELEGRAMSHARED_EXPORT &operator<<(QDataStream &stream, const PaymentSavedCredentials &item);
QDataStream LIBQTELEGRAMSHARED_EXPORT &operator>>(QDataStream &stream, PaymentSavedCredentials &item);

QDebug LIBQTELEGRAMSHARED_EXPORT operator<<(QDebug debug,  const PaymentSavedCredentials &item);

#endif // LQTG_TYPE_PAYMENTSAVEDCREDENTIALS
